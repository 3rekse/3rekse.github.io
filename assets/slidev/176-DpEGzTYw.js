import{o as n,c as r,k as i,q as l,s,A as a,e,a6 as o}from"../modules/vue-CzHRG3tJ.js";import{I as c}from"./default-CESjIoGN.js";import{_ as u,cZ as t}from"../index-CNiOs4Um.js";import{p as d,u as m,f as p}from"./context-CzMzD048.js";import"../modules/shiki-C5i64R19.js";const _=e("h2",null,"Combined logic - Part 4",-1),f=e("p",null,[o("Tuttavia, se prendiamo le altre due condizioni inutilizzate dalla tabella di verità che rendono l’operazione XOR "),e("code",null,"false"),o(", possiamo creare l’equazione negativa per XOR, chiamata NXOR:")],-1),h=e("p",null,[e("code",null,"~(A ⊕ B)"),o(" = "),e("code",null,"(~A · ~B) + (A · B)")],-1),g=e("p",null,[o("Per tornare a "),e("code",null,"A ⊕ B"),o(" dobbiamo negare questa equazione negativa. Poi, con l’aiuto del "),e("a",{href:"/internet/logic-lab/expressions#de-morgan-s-thereom",target:"_blank",rel:"noopener"},"Teorema di De Morgan"),o(", otteniamo un’equazione diversa per XOR ma è comunque logicamente equivalente a quella originale.")],-1),v=e("p",null,[e("code",null,"A ⊕ B"),o(" = "),e("code",null,"(A + B) · ~(A · B)")],-1),q=e("p",null,"Quando questa equazione viene convertita in porte logiche, c’è una porta in meno rispetto al primo diagramma.",-1),B={__name:"176",setup(z){return d(t),m(),(A,x)=>(n(),r(c,l(s(a(p)(a(t),175))),{default:i(()=>[_,f,h,g,v,q]),_:1},16))}},T=u(B,[["__file","/@slidev/slides/176.md"]]);export{T as default};
