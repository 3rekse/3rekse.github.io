import{b as n,o as r,w as s,g as e,v as l,x as u,B as i}from"./modules/vue-BXqLZby3.js";import{_ as p}from"./slidev/cover.vue_vue_type_script_setup_true_lang-Bd1rWwO6.js";import{u as m,f as c}from"./slidev/context-BgqA_Dhw.js";import"./index-CJl7H4dU.js";import"./modules/shiki-D1VZkxQz.js";const g={__name:"ilcomputer.md__slidev_329",setup(d){const{$clicksContext:t,$frontmatter:a}=m();return t.setup(),(_,o)=>(r(),n(p,l(u(i(c)(i(a),328))),{default:s(()=>o[0]||(o[0]=[e("h3",null,"🧑‍🎓 Studente-12",-1),e("h2",null,"Quindi, le pipeline permettono alla CPU di lavorare su più istruzioni allo stesso tempo. Ma cosa succede se c’è un’interruzione o un’istruzione richiede più tempo? 🛠️",-1),e("h3",null,"🧠 Omarillo-6",-1),e("h2",null,'Ottima domanda! Quando c’è un’interruzione, la pipeline può subire un "stall", una sorta di pausa, fino a quando l’istruzione che causa il problema non è completata. Tuttavia, le CPU moderne utilizzano tecniche come il "pipelining out-of-order" per mitigare questi problemi, eseguendo istruzioni che non dipendono dall’istruzione bloccata. ⏸️🚀',-1)])),_:1,__:[0]},16))}};export{g as default};
