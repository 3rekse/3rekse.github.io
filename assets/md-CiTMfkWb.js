import{o as r,c as a,k as s,e,aa as t,q as c,s as u,B as n}from"./modules/vue-DBgDjl02.js";import{I as d}from"./slidev/default-CH-PDKiU.js";import{u as m,f as p}from"./slidev/context-DZprEWXy.js";import"./index-BYY5VoBz.js";import"./modules/shiki-CR29Tdxk.js";const g={__name:"sequenziale.md__slidev_522",setup(z){const{$slidev:f,$nav:v,$clicksContext:o,$clicks:_,$page:b,$renderContext:$,$frontmatter:l}=m();return o.setup(),(k,i)=>(r(),a(d,c(u(n(p)(n(l),521))),{default:s(()=>i[0]||(i[0]=[e("h2",null,"Contatore",-1),e("ul",null,[e("li",null,[t("Un "),e("strong",null,"contatore"),t(" è un’astrazione fondamentale in elettronica e informatica utilizzata per memorizzare e contare valori.")]),e("li",null,"Utilizzo un contatore per contenere l’indirizzo dell’istruzione che un computer deve eseguire."),e("li",null,"Il contatore è progettato per incrementarsi di 1 in ogni ciclo di clock, consentendo al computer di recuperare e eseguire l’istruzione successiva nel programma.")],-1),e("h3",null,"Funzionalità del Contatore",-1),e("ul",null,[e("li",null,[t("Il contatore deve essere "),e("strong",null,"caricabile e azzerabile"),t(", il che significa che deve essere possibile impostare il contatore su un valore specifico (come l’istruzione numero n) e azzerarlo quando necessario.")]),e("li",null,[t("L’interfaccia del chip contatore è simile a quella di un registro e include due bit di controllo aggiuntivi: "),e("strong",null,"reset"),t(" e "),e("strong",null,"inc"),t(".")]),e("li",null,[t("Quando il bit "),e("strong",null,"inc=1"),t(", il contatore incrementa il suo stato ad ogni ciclo di clock emettendo il valore "),e("strong",null,"out(t) = out(t-1) + 1"),t(".")]),e("li",null,[t("Per resettare il contatore a 0, si imposta il bit di "),e("strong",null,"reset"),t("; per inizializzarlo su un’altra base di conteggio "),e("strong",null,"d"),t(", si inserisce "),e("strong",null,"d"),t(" nell’input e si attiva il bit di "),e("strong",null,"caricamento"),t(".")])],-1)])),_:1},16))}},I=g;export{I as default};
