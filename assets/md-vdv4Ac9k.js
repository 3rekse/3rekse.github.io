import{b as t,o as s,w as n,g as e,v as u,x as p,B as i}from"./modules/vue-BXqLZby3.js";import{_ as c}from"./slidev/intro-DZu4O9Mu.js";import{u as m,f as l}from"./slidev/context-DBCxS-96.js";import"./index-BM_5OaPd.js";import"./modules/shiki-D1VZkxQz.js";const x={__name:"virtualMachine.md__slidev_711",setup(d){const{$clicksContext:r,$frontmatter:o}=m();return r.setup(),(f,a)=>(s(),t(c,u(p(i(l)(i(o),710))),{default:n(()=>a[0]||(a[0]=[e("p",null,"Un semplice esempio di come un VMM deve interporsi su alcune operazioni sorge quando un processo in esecuzione su un dato sistema operativo cerca di fare una chiamata di sistema.",-1),e("p",null,"Ad esempio, il processo potrebbe cercare di chiamare open() su un file, o potrebbe chiamare read() per ottenere dati da esso, o potrebbe chiamare fork() per creare un nuovo processo.",-1),e("p",null,"In un sistema senza virtualizzazione, una chiamata di sistema viene eseguita con un’istruzione speciale; su MIPS, è un’istruzione di trap, e su x86, è l’istruzione int (un interrupt) con l’argomento 0x80.",-1),e("p",null,"Ecco la chiamata di libreria open su FreeBSD [B00] (ricorda che il tuo codice C prima fa una chiamata di libreria nella libreria C, che poi esegue la sequenza di assembly appropriata per effettivamente emettere l’istruzione di trap e fare una chiamata di sistema)",-1)])),_:1,__:[0]},16))}};export{x as default};
