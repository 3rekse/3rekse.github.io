import{o as s,c as p,k as a,e,ac as i,q as u,s as c,B as t}from"./modules/vue-C12uiUEh.js";import{I as d}from"./slidev/two-cols-header-DtZYhU9H.js";import{u as m,f as g}from"./slidev/context-DLvGGMMN.js";import"./index-CclkmBx8.js";import"./modules/shiki-BBIst5IO.js";const f="/rete/images/logic-lab/pld/cpx-pld.png",P="/rete/images/logic-lab/pld/not-and-or.png",I={__name:"programmable.md__slidev_442",setup(x){const{$slidev:_,$nav:z,$clicksContext:l,$clicks:C,$page:L,$renderContext:$,$frontmatter:n}=m();return l.setup(),(b,o)=>(s(),p(d,u(c(t(g)(t(n),441))),{left:a(r=>o[0]||(o[0]=[e("p",null,[i("Gli input logici per "),e("code",null,"A"),i(" e "),e("code",null,"B"),i(" sono collegati ai pin di input digitali. L’output risultante "),e("code",null,"Q"),i(" è collegato a un pin di output digitale. Possiamo fare una rappresentazione generale della tua scheda come un PLD selezionando alcuni pin digitali da utilizzare come input e output per la nostra logica programmabile. "),e("img",{src:f,alt:"Scheda con due input logici e un output"})],-1)])),right:a(r=>o[1]||(o[1]=[e("p",null,'"Collegando" i pin insieme con il codice, possiamo programmare porte logiche virtuali e far agire la scheda come un PLD. Con più pin e un po’ più di codice, possiamo anche creare un circuito logico combinato.',-1),e("p",null,[e("img",{src:P,alt:"Combinatorial XOR first version"})],-1)])),default:a(()=>[o[2]||(o[2]=e("h2",null,"Board PLD",-1)),o[3]||(o[3]=e("p",null,"L’idea fisica di utilizzare la tua scheda come un PLD è la seguente:",-1))]),_:1},16))}};export{I as default};
