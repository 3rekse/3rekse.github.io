import{o as i,c as n,k as t,q as r,s,A as a,e as o,a6 as e}from"../modules/vue-CzHRG3tJ.js";import{I as c}from"./default-CESjIoGN.js";import{_ as u,cj as l}from"../index-CNiOs4Um.js";import{p as d,u as m,f as p}from"./context-CzMzD048.js";import"../modules/shiki-C5i64R19.js";const _=o("h2",null,"Boolean algebra",-1),f=o("p",null,'George Boole ha creato un tipo di aritmetica (algebra booleana) che utilizza simboli per le condizioni, gli operatori e il risultato. Le condizioni sono considerate come variabili che hanno il valore di "vero" o "falso". Gli operatori come AND, OR e NOT sono simboli a carattere singolo. Se vogliamo trasformare l’affermazione "Sono felice quando c’è il sole o quando mangio un donut" in un’equazione booleana, possiamo iniziare facendo delle condizioni delle variabili.',-1),h=o("ul",null,[o("li",null,[e("Variabile "),o("code",null,"A"),e(" = "),o("code",null,`"C'è il sole"`),e(" ☀️")]),o("li",null,[e("Variabile "),o("code",null,"B"),e(" = "),o("code",null,'"Ho mangiato un donut"'),e(" 🍩")])],-1),b=o("p",null,[e("Il risultato, quindi, è una variabile chiamata "),o("code",null,"Q"),e(" che è vera quando sei felice e ha un valore che è il risultato di un’operazione tra "),o("code",null,"A"),e(" e "),o("code",null,"B"),e(". Questa operazione è l’OR che è rappresentato dal simbolo "),o("code",null,"+"),e(".")],-1),v=o("p",null,[o("code",null,"Q"),e(" = "),o("code",null,"A + B")],-1),z=o("p",null,[e("Il risultato di "),o("code",null,"Q"),e(" è vero quando c’è il sole o hai mangiato un donut.")],-1),g={__name:"134",setup(B){return d(l),m(),(q,x)=>(i(),n(c,r(s(a(p)(a(l),133))),{default:t(()=>[_,f,h,b,v,z]),_:1},16))}},k=u(g,[["__file","/@slidev/slides/134.md"]]);export{k as default};
