// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux8Way16.hdl
/**
 * 8-way 16-bit multiplexor:
 * out = a if sel = 000
 *       b if sel = 001
 *       c if sel = 010
 *       d if sel = 011
 *       e if sel = 100
 *       f if sel = 101
 *       g if sel = 110
 *       h if sel = 111
 */
CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    

    PARTS:
    
    Mux16(a=a , b=b , sel=sel[0] , out=t0 ); //  00 01 a b
    Mux16(a=t0 , b=c , sel=sel[1] , out=t1 );  // 10 c
    And(a=sel[0] , b=sel[1] , out=sd ); // 11 d
    Mux16(a=t1 , b=d , sel=sd , out=t2 );
    Mux16(a=t2 , b=e , sel=sel[2] , out=t3 ); //1xx e
    And(a=sel[0] , b=sel[2] , out=sf ); // 1x1 f
    Mux16(a=t3 , b=f , sel=sf , out=t4 );
    And(a=sel[1] , b=sel[2] , out=sg );
    Mux16(a=t4 , b=g , sel=sg , out=t5 ); //11x
    And(a=sel[0] , b=sg , out=sh );
    Mux16(a=t5 , b=h , sel=sh , out=out );

    //// Replace this comment with your code.
}