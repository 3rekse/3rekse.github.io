import{_ as l}from"./slidev/CodeBlockWrapper.vue_vue_type_script_setup_true_lang-C1cFisYa.js";import{o as n,c as p,k as a,e,l as m,m as d,q as c,s as f,B as r}from"./modules/vue-C12uiUEh.js";import{_ as u}from"./slidev/cover.vue_vue_type_script_setup_true_lang-Bs65cV59.js";import{u as g,f as k}from"./slidev/context-DDh2FNeL.js";import"./modules/unplugin-icons-DJgmUv7V.js";import"./index-Dt0mWzS2.js";import"./modules/shiki-BBIst5IO.js";const q={__name:"algebra.md__slidev_361",setup(_){const{$slidev:v,$nav:h,$clicksContext:o,$clicks:$,$page:x,$renderContext:B,$frontmatter:t}=g();return o.setup(),(C,s)=>{const i=l;return n(),p(u,c(f(r(k)(r(t),360))),{default:a(()=>[s[1]||(s[1]=e("h3",null,"ðŸ§  Omarillo 8",-1)),s[2]||(s[2]=e("h2",null,"E ora parliamo della porta NOT, che Ã¨ un poâ€™ diversa. Ha un solo ingresso e unâ€™uscita. Inverte il valore dellâ€™ingresso: se lâ€™ingresso Ã¨ vero, lâ€™uscita Ã¨ falsa, e viceversa. Questo Ã¨ scritto cosÃ¬:",-1)),m(i,d({},{ranges:[]}),{default:a(()=>s[0]||(s[0]=[e("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[e("code",{class:"language-txt"},[e("span",{class:"line"},[e("span",null,"Q = ~A")])])],-1)])),_:1},16)]),_:1},16)}}};export{q as default};
