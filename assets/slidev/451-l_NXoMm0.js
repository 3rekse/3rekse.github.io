import{o as s,c as t,k as u,q as a,s as r,A as o,e as l,a6 as e}from"../modules/vue-DflCt9hH.js";import{I as i}from"./default-D8n-L-kp.js";import{hk as n}from"../index-BXbHHbuc.js";import{p as c,u as d,f as p}from"./context-CgID4z_0.js";import"../modules/shiki-Din2pWPP.js";const m=l("h2",null,"Espressioni booleane",-1),_=l("p",null,"La seguente lista mostra gli elementi di notazione di base per le espressioni booleane.",-1),A=l("ul",null,[l("li",null,[l("code",null,"~A"),e(": l’inverso ("),l("strong",null,"NOT"),e(") di "),l("code",null,"A"),e(", quando "),l("code",null,"A"),e(" è "),l("code",null,"true"),e(", "),l("code",null,"~A"),e(" è "),l("code",null,"false")]),l("li",null,[l("code",null,"A + B"),e(": il valore di "),l("code",null,"A"),e(),l("strong",null,"OR"),e(),l("code",null,"B")]),l("li",null,[l("code",null,"A · B"),e(": il valore di "),l("code",null,"A"),e(),l("strong",null,"AND"),e(),l("code",null,"B")]),l("li",null,[l("code",null,"A ⊕ B"),e(": il valore dell’OR esclusivo ("),l("strong",null,"XOR"),e(") di "),l("code",null,"A"),e(" con "),l("code",null,"B")]),l("li",null,[l("code",null,"Q"),e(": valore risultante (OUTPUT) equivalente di un’espressione logica")])],-1),f=l("p",null,[e("Un valore risultante, "),l("code",null,"Q"),e(", da un’espressione logica è mostrato come:")],-1),v=l("p",null,[l("code",null,"Q"),e(" = "),l("code",null,"A + B")],-1),P={__name:"451",setup(B){return c(n),d(),(g,h)=>(s(),t(i,a(r(o(p)(o(n),450))),{default:u(()=>[m,_,A,f,v]),_:1},16))}};export{P as default};
