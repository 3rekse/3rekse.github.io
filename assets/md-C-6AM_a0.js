import{o as r,c as t,k as s,e as o,aa as e,q as u,s as c,B as l}from"./modules/vue-DBgDjl02.js";import{I as d}from"./slidev/default-DzcKQW5w.js";import{u as m,f as p}from"./slidev/context-ByIPmX0S.js";import"./index-D-xhO14d.js";import"./modules/shiki-CR29Tdxk.js";const f={__name:"expressions.md__slidev_352",setup(v){const{$slidev:b,$nav:_,$clicksContext:i,$clicks:g,$page:h,$renderContext:z,$frontmatter:n}=m();return i.setup(),(B,a)=>(r(),t(d,u(c(l(p)(l(n),351))),{default:s(()=>a[0]||(a[0]=[o("h2",null,"Boolean algebra",-1),o("p",null,'George Boole ha creato un tipo di aritmetica (algebra booleana) che utilizza simboli per le condizioni, gli operatori e il risultato. Le condizioni sono considerate come variabili che hanno il valore di "vero" o "falso". Gli operatori come AND, OR e NOT sono simboli a carattere singolo. Se vogliamo trasformare l‚Äôaffermazione "Sono felice quando c‚Äô√® il sole o quando mangio un donut" in un‚Äôequazione booleana, possiamo iniziare facendo delle condizioni delle variabili.',-1),o("ul",null,[o("li",null,[e("Variabile "),o("code",null,"A"),e(" = "),o("code",null,`"C'√® il sole"`),e(" ‚òÄÔ∏è")]),o("li",null,[e("Variabile "),o("code",null,"B"),e(" = "),o("code",null,'"Ho mangiato un donut"'),e(" üç©")])],-1),o("p",null,[e("Il risultato, quindi, √® una variabile chiamata "),o("code",null,"Q"),e(" che √® vera quando sei felice e ha un valore che √® il risultato di un‚Äôoperazione tra "),o("code",null,"A"),e(" e "),o("code",null,"B"),e(". Questa operazione √® l‚ÄôOR che √® rappresentato dal simbolo "),o("code",null,"+"),e(".")],-1),o("p",null,[o("code",null,"Q"),e(" = "),o("code",null,"A + B")],-1),o("p",null,[e("Il risultato di "),o("code",null,"Q"),e(" √® vero quando c‚Äô√® il sole o hai mangiato un donut.")],-1)])),_:1},16))}},A=f;export{A as default};
