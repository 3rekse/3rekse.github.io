import{o as n,c as t,k as r,q as s,s as c,B as a,e as o,aa as e}from"./modules/vue-9M24w38T.js";import{I as u}from"./slidev/default-Baua-wYJ.js";import{u as d,f as m}from"./slidev/context-BrpKgFPm.js";import"./index-CErdVrjL.js";import"./modules/shiki-D165QSPi.js";const p=o("h2",null,"Boolean algebra",-1),_=o("p",null,'George Boole ha creato un tipo di aritmetica (algebra booleana) che utilizza simboli per le condizioni, gli operatori e il risultato. Le condizioni sono considerate come variabili che hanno il valore di "vero" o "falso". Gli operatori come AND, OR e NOT sono simboli a carattere singolo. Se vogliamo trasformare l’affermazione "Sono felice quando c’è il sole o quando mangio un donut" in un’equazione booleana, possiamo iniziare facendo delle condizioni delle variabili.',-1),h=o("ul",null,[o("li",null,[e("Variabile "),o("code",null,"A"),e(" = "),o("code",null,`"C'è il sole"`),e(" ☀️")]),o("li",null,[e("Variabile "),o("code",null,"B"),e(" = "),o("code",null,'"Ho mangiato un donut"'),e(" 🍩")])],-1),f=o("p",null,[e("Il risultato, quindi, è una variabile chiamata "),o("code",null,"Q"),e(" che è vera quando sei felice e ha un valore che è il risultato di un’operazione tra "),o("code",null,"A"),e(" e "),o("code",null,"B"),e(". Questa operazione è l’OR che è rappresentato dal simbolo "),o("code",null,"+"),e(".")],-1),v=o("p",null,[o("code",null,"Q"),e(" = "),o("code",null,"A + B")],-1),b=o("p",null,[e("Il risultato di "),o("code",null,"Q"),e(" è vero quando c’è il sole o hai mangiato un donut.")],-1),g={__name:"expressions.md__slidev_340",setup(z){const{$slidev:B,$nav:x,$clicksContext:l,$clicks:$,$page:q,$renderContext:k,$frontmatter:i}=d();return l.setup(),(C,A)=>(n(),t(u,s(c(a(m)(a(i),339))),{default:r(()=>[p,_,h,f,v,b]),_:1},16))}},P=g;export{P as default};
