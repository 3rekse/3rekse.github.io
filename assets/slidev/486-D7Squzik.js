import{_ as r}from"./Link.vue_vue_type_script_setup_true_lang-Dccwe3tT.js";import{o as l,c as s,k as a,e,a6 as o,l as c,q as u,s as d,A as t}from"../modules/vue-DflCt9hH.js";import{I as m}from"./default-D8n-L-kp.js";import{hT as n}from"../index-BXbHHbuc.js";import{p,u as _,f}from"./context-CgID4z_0.js";import"../modules/shiki-Din2pWPP.js";const h=e("h2",null,"Combined logic - Part 4",-1),g=e("p",null,[o("Tuttavia, se prendiamo le altre due condizioni inutilizzate dalla tabella di verità che rendono l’operazione XOR "),e("code",null,"false"),o(", possiamo creare l’equazione negativa per XOR, chiamata NXOR:")],-1),q=e("p",null,[e("code",null,"~(A ⊕ B)"),o(" = "),e("code",null,"(~A · ~B) + (A · B)")],-1),v=e("code",null,"A ⊕ B",-1),B=e("p",null,[e("code",null,"A ⊕ B"),o(" = "),e("code",null,"(A + B) · ~(A · B)")],-1),z=e("p",null,"Quando questa equazione viene convertita in porte logiche, c’è una porta in meno rispetto al primo diagramma.",-1),X={__name:"486",setup(A){return p(n),_(),(x,P)=>{const i=r;return l(),s(m,u(d(t(f)(t(n),485))),{default:a(()=>[h,g,q,e("p",null,[o("Per tornare a "),v,o(" dobbiamo negare questa equazione negativa. Poi, con l’aiuto del "),c(i,{to:"/logic-lab/expressions#de-morgan-s-thereom"},{default:a(()=>[o("Teorema di De Morgan")]),_:1}),o(", otteniamo un’equazione diversa per XOR ma è comunque logicamente equivalente a quella originale.")]),B,z]),_:1},16)}}};export{X as default};
