import{o,c as t,k as n,q as r,s,A as a,e}from"../modules/vue-DflCt9hH.js";import{I as l}from"./default-D8n-L-kp.js";import{k2 as i}from"../index-BXbHHbuc.js";import{p,u as c,f as u}from"./context-CgID4z_0.js";import"../modules/shiki-Din2pWPP.js";const d=e("p",null,"Quando viene eseguita un’istruzione di trap, come abbiamo discusso prima, essa di solito fa un numero di cose interessanti.",-1),m=e("p",null,"La più importante nel nostro esempio è che trasferisce il controllo (cioè cambia il PC) a un gestore di trap ben definito all’interno del sistema operativo.",-1),_=e("p",null,"Il sistema operativo, quando si avvia per la prima volta, stabilisce l’indirizzo di una tale routine con l’hardware (anche questa è un’operazione privilegiata) e quindi, durante i trap successivi, l’hardware sa dove iniziare a eseguire il codice per gestire il trap.",-1),f=e("p",null,"Allo stesso tempo del trap, l’hardware fa anche un’altra cosa cruciale: cambia la modalità del processore da modalità utente a modalità kernel.",-1),v=e("p",null,"In modalità utente, le operazioni sono limitate e i tentativi di eseguire operazioni privilegiate porteranno a un trap e probabilmente alla terminazione del processo offensivo.",-1),h=e("p",null,"In modalità kernel, invece, è disponibile tutta la potenza della macchina e quindi tutte le operazioni privilegiate possono essere eseguite.",-1),z=e("p",null,"Pertanto, in un contesto tradizionale (ancora, senza virtualizzazione), il flusso di controllo sarebbe come quello che vedi nella Figura B.1.",-1),B={__name:"623",setup(b){return p(i),c(),(g,k)=>(o(),t(l,r(s(a(u)(a(i),622))),{default:n(()=>[d,m,_,f,v,h,z]),_:1},16))}};export{B as default};
