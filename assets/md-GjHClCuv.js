import{o as n,c as i,k as l,e,aa as s,q as c,s as m,B as a}from"./modules/vue-DBgDjl02.js";import{_ as p}from"./slidev/cover.vue_vue_type_script_setup_true_lang-Dwx595DG.js";import{u,f as d}from"./slidev/context-CcHCvI6e.js";import"./index-B3TjEoX2.js";import"./modules/shiki-CR29Tdxk.js";const f={__name:"algebra.md__slidev_410",setup(_){const{$slidev:b,$nav:v,$clicksContext:r,$clicks:$,$page:x,$renderContext:h,$frontmatter:t}=u();return r.setup(),(B,o)=>(n(),i(p,c(m(a(d)(a(t),409))),{default:l(()=>o[0]||(o[0]=[e("h3",null,"ðŸ§ ",-1),e("p",null,"Omarillo 3 -",-1),e("h2",null,"SÃ¬, in un certo senso. Lâ€™algebra booleana si occupa di variabili che assumono solo due valori: vero (1) e falso (0).",-1),e("h2",null,"Le operazioni fondamentali sono le stesse che abbiamo visto nellâ€™aritmetica booleana: AND, OR e NOT.",-1),e("h2",null,[s("Possiamo combinarle per creare espressioni booleane complesse. Ad esempio, lâ€™espressione "),e("code",null,"(A AND B) OR NOT C"),s(" restituisce vero se A e B sono entrambi veri, o se C Ã¨ falso.")],-1)])),_:1},16))}},g=f;export{g as default};
