import{o as t,c as s,k as i,q as r,s as n,A as o,e}from"../modules/vue-DflCt9hH.js";import{I as p}from"./default-D8n-L-kp.js";import{pV as a}from"../index-BXbHHbuc.js";import{p as c,u as l,f as u}from"./context-CgID4z_0.js";import"../modules/shiki-Din2pWPP.js";const m=e("h1",null,"Introduzione",-1),d=e("p",null,"Promesse JavaScript",-1),_=e("p",null,"Le promesse sono come un contratto, ma in JavaScript.",-1),f=e("p",null,"JavaScript è, di default, single threaded, quindi tutto il nostro codice viene eseguito in sequenza, una riga dopo l’altra.",-1),h=e("p",null,"Sfortunatamente, se una riga di codice, o una funzione per esempio, impiega troppo tempo per essere eseguita, la nostra applicazione si bloccherebbe, e si fermerebbe ad aspettare fino a quando quella riga ha completato la sua operazione.",-1),g=e("p",null,"Questo creerebbe un’esperienza utente orribile - immagina se la tua app si bloccasse completamente ogni volta che doveva recuperare dati o eseguire un calcolo complicato.",-1),b=e("p",null,"Entrano in gioco le Promesse. Le promesse sono un modo per gestire le operazioni asincrone in JavaScript.",-1),v=e("p",null,"Possiamo inserire codice che potrebbe impiegare molto tempo per essere eseguito in una Promessa, e poi essere notificati da JavaScript quando quella Promessa ha completato l’esecuzione (risolta).",-1),I={__name:"998",setup(z){return c(a),l(),(P,q)=>(t(),s(p,r(n(o(u)(o(a),997))),{default:i(()=>[m,d,_,f,h,g,b,v]),_:1},16))}};export{I as default};
