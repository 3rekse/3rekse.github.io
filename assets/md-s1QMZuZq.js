import{o as i,c as s,k as l,e,aa as o,q as u,s as c,B as a}from"./modules/vue-DBgDjl02.js";import{_ as p}from"./slidev/cover.vue_vue_type_script_setup_true_lang-VaQOqiLx.js";import{u as d,f as m}from"./slidev/context-Uj5J5Cpl.js";import"./index-CPi0H_jV.js";import"./modules/shiki-CR29Tdxk.js";const f={__name:"react.md__slidev_1108",setup(_){const{$slidev:v,$nav:g,$clicksContext:n,$clicks:h,$page:x,$renderContext:$,$frontmatter:r}=d();return n.setup(),(z,t)=>(i(),s(p,u(c(a(m)(a(r),1107))),{default:l(()=>t[0]||(t[0]=[e("p",null,"🧑‍🎓 Studente 6 (Con tono curioso):",-1),e("h3",null,'"E come funziona esattamente Redux?"',-1),e("p",null,"🧠 - Omarillo 11 (Con tono esplicativo):",-1),e("h3",null,[o('"'),e("strong",null,"Redux"),o(" utilizza un approccio chiamato "),e("strong",null,"store"),o(" per contenere tutto lo stato globale della tua app. Ogni volta che vuoi aggiornare lo stato, invii un’"),e("strong",null,"azione"),o(" (action) che descrive cosa vuoi fare. Poi, un "),e("strong",null,"reducer"),o(" prende l’azione e lo stato precedente e ritorna il nuovo stato. Questo processo è chiamato "),e("strong",null,"architettura a flusso unidirezionale"),o(', poiché i dati fluiscono sempre in una direzione chiara e prevedibile."')],-1)])),_:1},16))}},b=f;export{b as default};
