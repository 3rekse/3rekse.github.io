import{o as s,c as i,k as n,q as r,s as c,B as o,e}from"./modules/vue-9M24w38T.js";import{I as p}from"./slidev/default-p8i6ujn3.js";import{u as l,f as u}from"./slidev/context-B14DBQu9.js";import"./index-D5LvUICJ.js";import"./modules/shiki-D165QSPi.js";const m=e("h1",null,"Introduzione",-1),d=e("p",null,"Promesse JavaScript",-1),_=e("p",null,"Le promesse sono come un contratto, ma in JavaScript.",-1),f=e("p",null,"JavaScript è, di default, single threaded, quindi tutto il nostro codice viene eseguito in sequenza, una riga dopo l’altra.",-1),h=e("p",null,"Sfortunatamente, se una riga di codice, o una funzione per esempio, impiega troppo tempo per essere eseguita, la nostra applicazione si bloccherebbe, e si fermerebbe ad aspettare fino a quando quella riga ha completato la sua operazione.",-1),g=e("p",null,"Questo creerebbe un’esperienza utente orribile - immagina se la tua app si bloccasse completamente ogni volta che doveva recuperare dati o eseguire un calcolo complicato.",-1),v=e("p",null,"Entrano in gioco le Promesse. Le promesse sono un modo per gestire le operazioni asincrone in JavaScript.",-1),b=e("p",null,"Possiamo inserire codice che potrebbe impiegare molto tempo per essere eseguito in una Promessa, e poi essere notificati da JavaScript quando quella Promessa ha completato l’esecuzione (risolta).",-1),z={__name:"promises.md__slidev_998",setup(P){const{$slidev:$,$nav:q,$clicksContext:a,$clicks:S,$page:x,$renderContext:k,$frontmatter:t}=l();return a.setup(),(J,B)=>(s(),i(p,r(c(o(u)(o(t),997))),{default:n(()=>[m,d,_,f,h,g,v,b]),_:1},16))}},y=z;export{y as default};
