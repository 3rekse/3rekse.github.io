import{o as t,c as s,k as i,q as r,s as n,A as o,e}from"../modules/vue-CzHRG3tJ.js";import{I as p}from"./default-DHB9zM-F.js";import{_ as c,hK as a}from"../index-Bxv0B-Cu.js";import{p as l,u,f as m}from"./context-BRdP0yFI.js";import"../modules/shiki-C5i64R19.js";const d=e("h1",null,"Introduzione",-1),_=e("p",null,"Promesse JavaScript",-1),f=e("p",null,"Le promesse sono come un contratto, ma in JavaScript.",-1),h=e("p",null,"JavaScript è, di default, single threaded, quindi tutto il nostro codice viene eseguito in sequenza, una riga dopo l’altra.",-1),g=e("p",null,"Sfortunatamente, se una riga di codice, o una funzione per esempio, impiega troppo tempo per essere eseguita, la nostra applicazione si bloccherebbe, e si fermerebbe ad aspettare fino a quando quella riga ha completato la sua operazione.",-1),v=e("p",null,"Questo creerebbe un’esperienza utente orribile - immagina se la tua app si bloccasse completamente ogni volta che doveva recuperare dati o eseguire un calcolo complicato.",-1),b=e("p",null,"Entrano in gioco le Promesse. Le promesse sono un modo per gestire le operazioni asincrone in JavaScript.",-1),z=e("p",null,"Possiamo inserire codice che potrebbe impiegare molto tempo per essere eseguito in una Promessa, e poi essere notificati da JavaScript quando quella Promessa ha completato l’esecuzione (risolta).",-1),P={__name:"480",setup(q){return l(a),u(),(S,x)=>(t(),s(p,r(n(o(m)(o(a),479))),{default:i(()=>[d,_,f,h,g,v,b,z]),_:1},16))}},C=c(P,[["__file","/@slidev/slides/480.md"]]);export{C as default};
