import{o as n,c as r,k as l,e,q as s,s as c,B as a}from"./modules/vue-C12uiUEh.js";import{_ as u}from"./slidev/cover.vue_vue_type_script_setup_true_lang-CELFXzka.js";import{u as p,f as m}from"./slidev/context-BB4SzEf7.js";import"./index-Dcu3EgtZ.js";import"./modules/shiki-BBIst5IO.js";const k={__name:"ilcomputer.md__slidev_216",setup(d){const{$slidev:f,$nav:_,$clicksContext:o,$clicks:v,$page:z,$renderContext:g,$frontmatter:t}=p();return o.setup(),(h,i)=>(n(),r(u,s(c(a(m)(a(t),215))),{default:l(()=>i[0]||(i[0]=[e("h3",null,"🧠 Omarillo-1",-1),e("p",null,"La CPU utilizza un’architettura a più livelli per gestire le istruzioni. Immagina una catena di montaggio: ci sono pipeline, cache e core multipli che lavorano insieme per eseguire compiti in parallelo, rendendo il processo più efficiente. 🏗️",-1),e("h3",null,"🧑‍🎓 Studente2",-1),e("p",null,"Quindi, la CPU è come un abile giocoliere che mantiene tutto in aria senza far cadere nulla! Ma cosa succede quando abbiamo più CPU o core? Come lavorano insieme senza conflitti? 🤔",-1),e("h3",null,"🧠 Omarillo12",-1),e("p",null,"Esattamente! Quando abbiamo più CPU o core, entra in gioco il concetto di parallelismo. I processori lavorano su compiti separati ma sincronizzati, come una squadra di costruttori che lavora su diverse parti di un edificio. La chiave è la coordinazione, gestita dal sistema operativo e dalle tecniche di sincronizzazione. 🛠️",-1)])),_:1},16))}};export{k as default};
