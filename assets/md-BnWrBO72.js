import{_ as p}from"./slidev/CodeBlockWrapper.vue_vue_type_script_setup_true_lang-uDhOKYWm.js";import{o as d,c as u,k as a,l as i,m as l,q as m,s as _,B as t,e as s,aa as e}from"./modules/vue-9M24w38T.js";import{I as h}from"./slidev/two-cols-header-DZ3XklxT.js";import{u as g,f}from"./slidev/context-mWja_fIZ.js";import"./modules/unplugin-icons-Bmhb8--w.js";import"./index-l2FSSgYu.js";import"./modules/shiki-D165QSPi.js";const k=s("p",null,"Programma simbolico: Si riferisce a un programma scritto utilizzando simboli o rappresentazioni astratte anziché direttamente nel codice macchina.",-1),b=s("p",null,"Tradotto: Processo di conversione del programma simbolico in istruzioni leggibili dalla macchina.",-1),R=s("p",null,"Istruzioni: Comandi specifici o passaggi che il computer può comprendere ed eseguire.",-1),v=s("p",null,"Decodificare: Il computer traduce le istruzioni in un formato che può eseguire.",-1),x=s("p",null,"Eseguire: Il computer esegue i comandi specificati nelle istruzioni per svolgere le attività desiderate.",-1),z=s("p",null,"Symbolic program Assembly (language)",-1),P=s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[s("code",{class:"language-text"},[s("span",{class:"line"},[s("span",null,"// Sets R2 to abs(R1)")]),e(`
`),s("span",{class:"line"},[s("span",null,"// R2 ← R1")]),e(`
`),s("span",{class:"line"},[s("span",null,"mov R2,R1")]),e(`
`),s("span",{class:"line"},[s("span",null,"// if (R2 > 0) goto cont")]),e(`
`),s("span",{class:"line"},[s("span",null,"jgt R2,CONT")]),e(`
`),s("span",{class:"line"},[s("span",null,"// R2 ← –R1")]),e(`
`),s("span",{class:"line"},[s("span",null,"movi R2,0")]),e(`
`),s("span",{class:"line"},[s("span",null,"sub R2,R1")]),e(`
`),s("span",{class:"line"},[s("span",null,"CONT:")]),e(`
`),s("span",{class:"line"},[s("span",null,"// Here R2 = abs(R1)")])])],-1),T=s("p",null,"Binary code",-1),$=s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[s("code",{class:"language-text"},[s("span",{class:"line"},[s("span",null,"0101111100111100")]),e(`
`),s("span",{class:"line"},[s("span",null,"1010101010101010")]),e(`
`),s("span",{class:"line"},[s("span",null,"1100000010101010")]),e(`
`),s("span",{class:"line"},[s("span",null,"1011000010000001")]),e(`
`),s("span",{class:"line"},[s("span",null,"...")])])],-1),y=s("p",null,"Translate Load and execute",-1),C=s("p",null,"Assembler (tool): Translation: INPUT symbolic program OUTPUT Binary code.",-1),B={__name:"sequenziale.md__slidev_518",setup(I){const{$slidev:N,$nav:S,$clicksContext:o,$clicks:O,$page:U,$renderContext:V,$frontmatter:c}=g();return o.setup(),(j,q)=>{const n=p;return d(),u(h,m(_(t(f)(t(c),517))),{left:a(r=>[z,i(n,l({},{ranges:[]}),{default:a(()=>[P]),_:1},16)]),right:a(r=>[T,i(n,l({},{ranges:[]}),{default:a(()=>[$]),_:1},16),y,C]),default:a(()=>[k,b,R,v,x]),_:1},16)}}},F=B;export{F as default};
