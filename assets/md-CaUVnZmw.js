import{o as n,c as r,k as s,e,q as l,s as u,B as i}from"./modules/vue-C12uiUEh.js";import{_ as p}from"./slidev/cover.vue_vue_type_script_setup_true_lang-CroqROdx.js";import{u as c,f as m}from"./slidev/context-D9JrRRL5.js";import"./index-CJLvuiE7.js";import"./modules/shiki-BBIst5IO.js";const b={__name:"ilcomputer.md__slidev_245",setup(d){const{$slidev:f,$nav:_,$clicksContext:t,$clicks:z,$page:h,$renderContext:$,$frontmatter:a}=c();return t.setup(),(v,o)=>(n(),r(p,l(u(i(m)(i(a),244))),{default:s(()=>o[0]||(o[0]=[e("h3",null,"🧑‍🎓 Studente-12",-1),e("h2",null,"Quindi, le pipeline permettono alla CPU di lavorare su più istruzioni allo stesso tempo. Ma cosa succede se c’è un’interruzione o un’istruzione richiede più tempo? 🛠️",-1),e("h3",null,"🧠 Omarillo-6",-1),e("h2",null,'Ottima domanda! Quando c’è un’interruzione, la pipeline può subire un "stall", una sorta di pausa, fino a quando l’istruzione che causa il problema non è completata. Tuttavia, le CPU moderne utilizzano tecniche come il "pipelining out-of-order" per mitigare questi problemi, eseguendo istruzioni che non dipendono dall’istruzione bloccata. ⏸️🚀',-1)])),_:1},16))}};export{b as default};
