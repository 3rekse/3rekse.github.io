import{_ as r}from"./slidev/Link.vue_vue_type_script_setup_true_lang-BQDjpu3w.js";import{o as s,c,k as a,e,aa as o,l as u,q as d,s as m,B as t}from"./modules/vue-9M24w38T.js";import{I as p}from"./slidev/default-C3klLF9E.js";import{u as _,f}from"./slidev/context-mWja_fIZ.js";import"./index-l2FSSgYu.js";import"./modules/shiki-D165QSPi.js";const g=e("h2",null,"Combined logic - Part 4",-1),h=e("p",null,[o("Tuttavia, se prendiamo le altre due condizioni inutilizzate dalla tabella di verità che rendono l’operazione XOR "),e("code",null,"false"),o(", possiamo creare l’equazione negativa per XOR, chiamata NXOR:")],-1),v=e("p",null,[e("code",null,"~(A ⊕ B)"),o(" = "),e("code",null,"(~A · ~B) + (A · B)")],-1),B=e("code",null,"A ⊕ B",-1),q=e("p",null,[e("code",null,"A ⊕ B"),o(" = "),e("code",null,"(A + B) · ~(A · B)")],-1),z=e("p",null,"Quando questa equazione viene convertita in porte logiche, c’è una porta in meno rispetto al primo diagramma.",-1),$={__name:"logic-gates.md__slidev_486",setup(x){const{$slidev:A,$nav:k,$clicksContext:n,$clicks:P,$page:b,$renderContext:C,$frontmatter:i}=_();return n.setup(),(R,N)=>{const l=r;return s(),c(p,d(m(t(f)(t(i),485))),{default:a(()=>[g,h,v,e("p",null,[o("Per tornare a "),B,o(" dobbiamo negare questa equazione negativa. Poi, con l’aiuto del "),u(l,{to:"/logic-lab/expressions#de-morgan-s-thereom"},{default:a(()=>[o("Teorema di De Morgan")]),_:1}),o(", otteniamo un’equazione diversa per XOR ma è comunque logicamente equivalente a quella originale.")]),q,z]),_:1},16)}}},j=$;export{j as default};
